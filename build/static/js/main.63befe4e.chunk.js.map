{"version":3,"sources":["components/Navbar.js","components/Text.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","modegive","to","title","type","id","about","onClick","toogle","htmlFor","Text","useState","state","setState","lower","n","toLowerCase","set","style","color","fontSize","head","placeholder","value","onChange","e","target","backgroundColor","rows","disabled","length","newtext","toUpperCase","navigator","clipboard","writeText","split","join","filter","ele","About","mystyle","Alert","height","alert","role","word","charAt","slice","capitalize","message","App","mode","setMode","setAlert","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63befe4e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = (props) => {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.modegive} bg-${props.modegive}`}>\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" to=\"/about\" >{props.about}</Link>\r\n            </li>\r\n\r\n\r\n\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.modegive === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toogle} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.modegive === 'light' ? 'dark' : 'light'} Mode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n\r\n}\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nexport const Text = (props) => {\r\n    const [state, setState] = useState('');\r\n    const upper = () => {\r\n        let newtext = state.toUpperCase();\r\n        setState(newtext);\r\n        props.set('Converted to uppercase!', 'success');\r\n\r\n    }\r\n    const lower = () => {\r\n        let n = state.toLowerCase();\r\n        setState(n);\r\n        props.set('Converted to lowercase!', 'success');\r\n\r\n\r\n    }\r\n    const copy = () => {\r\n        navigator.clipboard.writeText(state);\r\n        props.set('Copied to clipboard', 'success');\r\n\r\n    }\r\n    const extra = () => {\r\n        let newtext = state.split(/[ ]+/);\r\n        setState(newtext.join(\" \"));\r\n        props.set('Extra Spaces Removed', 'success');\r\n\r\n\r\n    }\r\n\r\n    const clear = () => {\r\n        let n = \"\"\r\n        setState(n);\r\n        props.set('Text Cleared!', 'success');\r\n\r\n\r\n    }\r\n    const onchange = (e) => {\r\n        setState(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.modegive === 'dark' ? 'white' : 'black' }} >\r\n\r\n                <h1 style={{fontSize:'30px'}} className=\"mb-4\">{props.head}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" placeholder=\"Enter text here\" value={state} onChange={onchange} style={{ backgroundColor: props.modegive === 'dark' ? ' rgb(58 58 169)' : 'white', color: props.modegive === 'dark' ? 'white' : 'black' }} id=\"myBox\" rows=\"6\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={upper}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={lower}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={lower}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={copy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={extra}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mx-2 my-2\" disabled={state.length===0} onClick={clear}>Clear Text</button>\r\n\r\n\r\n            </div>\r\n            <div className=\"container\" style={{ color: props.modegive === 'dark' ? 'white' : 'black' }}>\r\n                <h1 style={{fontSize:'30px'}}>Text summary</h1>\r\n                <p>{ state.split(/\\s+/).filter((ele)=>{return ele.length!==0}).length} Words {state.length} Characters</p>\r\n                <h2 style={{fontSize:'30px'}}>\r\n                    Preview\r\n                </h2>\r\n                <p>{state.length > 0 ? state : 'Enter Something to Preview'}</p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Text;\r\n","import React from 'react';\r\nexport const About = (props) => {\r\nlet mystyle={\r\ncolor: props.modegive==='dark'?'white':'black',\r\nbackgroundColor: props.modegive==='dark'?' rgb(58 58 169)':'white',\r\n\r\n}\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\" >\r\n      <h1 className=\"my-3\" style={{color: props.modegive==='dark'?'white':'black'}}>About Us</h1>\r\n      <div className=\"box\" style={mystyle}>\r\n\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" >\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" type=\"button\" style={mystyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              <strong>\r\n                Analyze your Text\r\n              </strong>            \r\n              </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" style={mystyle} aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>Analyzes Text ! </strong>Calculate the following Text Statistics: Count of Words, Convert to Uppercase,Convert to Lowercase , Remove extra spaces and also copy the formatted text.\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n              < strong>\r\n                Browser Compatible\r\n              </strong>            \r\n              </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={mystyle} aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>This is Browser Compatible Website.</strong> Our website appear fully functional on different browsers that are available in the market. \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n              <strong>\r\n                Free to Use\r\n              </strong>            \r\n              </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" style={mystyle} aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n              <strong>Its Free ! </strong> Our Website is free and easy to use and performs all sort of text calculations.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Text from './components/Text';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\n\n   \nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const set = (message, type) => {\n    setAlert(\n      {\n        message: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null);\n      \n    }, 1500);\n  }\n\n  const toogle = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'rgb(23 23 81)';\n      // document.title='Text Utils - Dark Mode';\n      set('Dark Mode has been Enabled', 'success');\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      // document.title='Text Utils - Light Mode';\n      set('Light Mode has been Enabled', 'success');\n\n\n\n\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" about=\"About Us\" modegive={mode} toogle={toogle} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n      <Switch>\n          <Route exact path=\"/about\">\n            <About modegive={mode} />\n          </Route>\n \n          <Route exact path=\"/\">\n          <Text set={set} head=\"Try TextUtils - Word counter, Character counter, Remove extra spaces\" modegive={mode} />\n          </Route>\n        </Switch>\n\n      </div>\n      </Router>\n    </>);\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}